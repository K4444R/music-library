definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Song:
    description: Детали песни
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact:
    email: alisheralishev4444@gmail.com
    name: Alisher Alishev
  description: This is a simple API for managing a music library.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Music Library API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Retrieve a list of songs with optional filtering and pagination
      parameters:
      - description: Filter by group name
        in: query
        name: group
        type: string
      - description: Filter by song name
        in: query
        name: song
        type: string
      - description: 'Number of records to skip (default: 0)'
        in: query
        name: skip
        type: integer
      - description: 'Number of records to return (default: 10)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of songs
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all songs
      tags:
      - Songs
    post:
      consumes:
      - application/json
      description: Add a new song to the library, enriched with details from an external
        API
      parameters:
      - description: Song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "201":
          description: Created song
          schema:
            $ref: '#/definitions/models.Song'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "503":
          description: External service unavailable
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Add a new song
      tags:
      - Songs
  /songs/{id}:
    delete:
      description: Delete a song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Song deleted successfully
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Song not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a song
      tags:
      - Songs
swagger: "2.0"
